/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Box2DCS {

using System;
using System.Runtime.InteropServices;

public class b2MouseJointDef : b2JointDef {
  private HandleRef swigCPtr;

  internal b2MouseJointDef(IntPtr cPtr, bool cMemoryOwn) : base(Box2DPINVOKE.b2MouseJointDef_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(b2MouseJointDef obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~b2MouseJointDef() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Box2DPINVOKE.delete_b2MouseJointDef(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public b2MouseJointDef() : this(Box2DPINVOKE.new_b2MouseJointDef(), true) {
  }

  public b2Vec2 target {
    set {
      Box2DPINVOKE.b2MouseJointDef_target_set(swigCPtr, b2Vec2.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Box2DPINVOKE.b2MouseJointDef_target_get(swigCPtr);
      b2Vec2 ret = (cPtr == IntPtr.Zero) ? null : new b2Vec2(cPtr, false);
      return ret;
    } 
  }

  public float maxForce {
    set {
      Box2DPINVOKE.b2MouseJointDef_maxForce_set(swigCPtr, value);
    } 
    get {
      float ret = Box2DPINVOKE.b2MouseJointDef_maxForce_get(swigCPtr);
      return ret;
    } 
  }

  public float frequencyHz {
    set {
      Box2DPINVOKE.b2MouseJointDef_frequencyHz_set(swigCPtr, value);
    } 
    get {
      float ret = Box2DPINVOKE.b2MouseJointDef_frequencyHz_get(swigCPtr);
      return ret;
    } 
  }

  public float dampingRatio {
    set {
      Box2DPINVOKE.b2MouseJointDef_dampingRatio_set(swigCPtr, value);
    } 
    get {
      float ret = Box2DPINVOKE.b2MouseJointDef_dampingRatio_get(swigCPtr);
      return ret;
    } 
  }

}

}
