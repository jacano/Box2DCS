/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Box2DCS {

using System;
using System.Runtime.InteropServices;

public class b2ContactManager : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal b2ContactManager(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(b2ContactManager obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~b2ContactManager() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Box2DPINVOKE.delete_b2ContactManager(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public b2ContactManager() : this(Box2DPINVOKE.new_b2ContactManager(), true) {
  }

  public void AddPair(SWIGTYPE_p_void proxyUserDataA, SWIGTYPE_p_void proxyUserDataB) {
    Box2DPINVOKE.b2ContactManager_AddPair(swigCPtr, SWIGTYPE_p_void.getCPtr(proxyUserDataA), SWIGTYPE_p_void.getCPtr(proxyUserDataB));
  }

  public void FindNewContacts() {
    Box2DPINVOKE.b2ContactManager_FindNewContacts(swigCPtr);
  }

  public void Destroy(b2Contact c) {
    Box2DPINVOKE.b2ContactManager_Destroy(swigCPtr, b2Contact.getCPtr(c));
  }

  public void Collide() {
    Box2DPINVOKE.b2ContactManager_Collide(swigCPtr);
  }

  public b2BroadPhase m_broadPhase {
    set {
      Box2DPINVOKE.b2ContactManager_m_broadPhase_set(swigCPtr, b2BroadPhase.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Box2DPINVOKE.b2ContactManager_m_broadPhase_get(swigCPtr);
      b2BroadPhase ret = (cPtr == IntPtr.Zero) ? null : new b2BroadPhase(cPtr, false);
      return ret;
    } 
  }

  public b2Contact m_contactList {
    set {
      Box2DPINVOKE.b2ContactManager_m_contactList_set(swigCPtr, b2Contact.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Box2DPINVOKE.b2ContactManager_m_contactList_get(swigCPtr);
      b2Contact ret = (cPtr == IntPtr.Zero) ? null : new b2Contact(cPtr, false);
      return ret;
    } 
  }

  public int m_contactCount {
    set {
      Box2DPINVOKE.b2ContactManager_m_contactCount_set(swigCPtr, value);
    } 
    get {
      int ret = Box2DPINVOKE.b2ContactManager_m_contactCount_get(swigCPtr);
      return ret;
    } 
  }

  public b2ContactFilter m_contactFilter {
    set {
      Box2DPINVOKE.b2ContactManager_m_contactFilter_set(swigCPtr, b2ContactFilter.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Box2DPINVOKE.b2ContactManager_m_contactFilter_get(swigCPtr);
      b2ContactFilter ret = (cPtr == IntPtr.Zero) ? null : new b2ContactFilter(cPtr, false);
      return ret;
    } 
  }

  public b2ContactListener m_contactListener {
    set {
      Box2DPINVOKE.b2ContactManager_m_contactListener_set(swigCPtr, b2ContactListener.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Box2DPINVOKE.b2ContactManager_m_contactListener_get(swigCPtr);
      b2ContactListener ret = (cPtr == IntPtr.Zero) ? null : new b2ContactListener(cPtr, false);
      return ret;
    } 
  }

  public b2BlockAllocator m_allocator {
    set {
      Box2DPINVOKE.b2ContactManager_m_allocator_set(swigCPtr, b2BlockAllocator.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Box2DPINVOKE.b2ContactManager_m_allocator_get(swigCPtr);
      b2BlockAllocator ret = (cPtr == IntPtr.Zero) ? null : new b2BlockAllocator(cPtr, false);
      return ret;
    } 
  }

}

}
